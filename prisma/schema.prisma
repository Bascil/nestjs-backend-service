// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "mysql"
  url       = env("MYSQL_PRISMA_URL") // uses connection pooling
  directUrl = env("MYSQL_URL_NON_POOLING") // uses a direct connection
}

model user {
  id              String      @id @default(uuid()) @db.VarChar(255)
  firstName       String      @db.VarChar(255)
  lastName        String      @db.VarChar(255)
  email           String      @unique @db.VarChar(255)
  phoneNumber     String?     @db.VarChar(255)
  address         String?     @db.VarChar(255)
  taxPin          String?      @db.VarChar(255)
  password        String      @db.VarChar(255)
  emailVerifiedAt DateTime?   @map("email_verified_at")
  isActive        Boolean     @default(true) @map("is_active")
  createdAt       DateTime    @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt       DateTime    @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  user_role       user_role[]

  @@index([firstName, lastName,email])
  @@map("users")
}

model role {
  id              String            @id @default(uuid()) @db.VarChar(255)
  name            String            @db.VarChar(255)
  createdAt       DateTime          @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt       DateTime          @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  role_permission role_permission[]
  user_role       user_role[]

  @@map("roles")
}

model permission {
  id              String            @id @default(uuid()) @db.VarChar(255)
  name            String            @db.VarChar(255)
  createdAt       DateTime          @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt       DateTime          @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  role_permission role_permission[]

  @@map("permissions")
}

model role_permission {
  id           String     @id @default(uuid()) @db.VarChar(255)
  roles        role       @relation(fields: [roleId], references: [id], onDelete: Cascade)
  roleId       String     @map("role_id") @db.VarChar(255)
  permissions  permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)
  permissionId String     @map("permission_id") @db.VarChar(255)
  createdAt    DateTime   @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt    DateTime   @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)

  @@map("role_permissions")
}

model user_role {
  id        String   @id @default(uuid()) @db.VarChar(255)
  users     user     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String   @map("user_id") @db.VarChar(255)
  roles     role     @relation(fields: [roleId], references: [id], onDelete: Cascade)
  roleId    String   @map("role_id") @db.VarChar(255)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)

  @@map("user_roles")
}

model customer {
  id              String      @id @default(uuid()) @db.VarChar(255)
  firstName       String      @db.VarChar(255)
  lastName        String      @db.VarChar(255)
  email           String      @unique @db.VarChar(255)
  phoneNumber     String      @db.VarChar(255)
  address         String?     @db.VarChar(255)
  isActive        Boolean     @default(true) @map("is_active")
  createdAt       DateTime    @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt       DateTime    @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)

  @@index([firstName, lastName,email])
  @@map("customer")
}

model lead {
  id          String    @id @default(uuid()) @db.VarChar(255)
  firstName   String    @db.VarChar(255)
  lastName    String    @db.VarChar(255)
  email       String    @unique @db.VarChar(255)
  phoneNumber String    @db.VarChar(255)
  address     String?   @db.VarChar(255)
  source      String?   @db.VarChar(255) 
  status      String    @default("new") @db.VarChar(255) // Status of the lead, e.g., new, contacted, converted
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt   DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)

  @@index([firstName, lastName, email])
  @@map("leads")
}


