steps:
  # Create .env file from Cloud Build substitution variables
  - name: 'bash'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        cat <<EOF > .env
        DATABASE_URL=${_DATABASE_URL}
        MYSQL_PRISMA_URL=${_MYSQL_PRISMA_URL}
        MYSQL_URL_NON_POOLING=${_MYSQL_URL_NON_POOLING}
        JWT_SECRET=${_JWT_SECRET}
        JWT_EXPIRES_IN=${_JWT_EXPIRES_IN}
        JWT_REFRESH_SECRET=${_JWT_REFRESH_SECRET}
        JWT_REFRESH_EXPIRES_IN=${_JWT_REFRESH_EXPIRES_IN}
        TOKEN_TYPE=${_TOKEN_TYPE}
        EOF

  # Remove any trailing whitespace and empty lines
  - name: 'bash'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        sed -i 's/[[:space:]]*$//' .env
        sed -i '/^$/d' .env
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/$REPO_NAME:$COMMIT_SHA', '.']
  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/$REPO_NAME:$COMMIT_SHA']
  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '$REPO_NAME'
      - '--image'
      - 'gcr.io/$PROJECT_ID/$REPO_NAME:$COMMIT_SHA'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '3000'
      - '--min-instances'
      - '0'
      - '--max-instances'
      - '1'
      - '--memory'
      - '512Mi'
      - '--concurrency'
      - '500'
      - '--set-env-vars'
      - |
        DATABASE_URL=${_DATABASE_URL}
        MYSQL_PRISMA_URL=${_MYSQL_PRISMA_URL}
        MYSQL_URL_NON_POOLING=${_MYSQL_URL_NON_POOLING}
        JWT_SECRET=${_JWT_SECRET}
        JWT_EXPIRES_IN=${_JWT_EXPIRES_IN}
        JWT_REFRESH_SECRET=${_JWT_REFRESH_SECRET}
        JWT_REFRESH_EXPIRES_IN=${_JWT_REFRESH_EXPIRES_IN}
        TOKEN_TYPE=${_TOKEN_TYPE}

images:
  - 'gcr.io/$PROJECT_ID/$REPO_NAME:$COMMIT_SHA'
